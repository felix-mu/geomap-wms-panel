## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  enabled: true
  type: NodePort
  port: 80
  targetPort: 3000
  portName: service
  nodePort: 30000

useStatefulSet: true

replicas: 2

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  type: statefulset # pvc
  enabled: true # false
  # existingClaim: task-pv-claim
  accessModes:
    - ReadWriteOnce

## Define command to be executed at startup by grafana container
## Needed if using `vault-env` to manage secrets (ref: https://banzaicloud.com/blog/inject-secrets-into-pods-vault/)
## Default is "run.sh" as defined in grafana's Dockerfile
command:
  # - "mkdir /var/lib/grafana/plugins/geomap-wms-panel"
  # - &&
  - "sh"
  - "/run.sh"

# Use an existing secret for the admin user.
admin:
  ## Name of the secret. Can be templated.
  existingSecret: admin-user-secret
  userKey: username
  passwordKey: password

## Pass the plugins you want installed as a list.
plugins:
  - marcusolsson-json-datasource
  - iosb-sensorthings-datasource
  
egress:
  ## @param networkPolicy.egress.enabled When enabled, an egress network policy will be
  ## created allowing grafana to connect to external data sources from kubernetes cluster.
  enabled: true
  # ports:
    # - 80
    # - 443
  # to:
    # - ipBlock:
        # cidr: 10.158.0.85

grafana.ini:
  plugins:
    allow_loading_unsigned_plugins: felixrelleum-geomapwms-panel

datasources:
  datasource.yaml:
    apiVersion: 1
    datasources:
      - name: FROST Internet
        type: iosb-sensorthings-datasource
        access: proxy
        url: https://geoportal-konfig-test.muenchen.de/frostk11/v1.1
        isDefault: false
      - name: JSON API FROST Internet
        type: marcusolsson-json-datasource
        access: proxy
        url: https://geoportal-konfig-test.muenchen.de/frostk11/v1.1
        isDefault: false
      - name: FROST Intranet
        type: iosb-sensorthings-datasource
        access: proxy
        url: https://geoportal-konfig-test2.muenchen.de/vis/v1.1
        isDefault: false
      - name: JSON API FROST Intranet
        type: marcusolsson-json-datasource
        access: proxy
        url: https://geoportal-konfig-test2.muenchen.de/vis/v1.1
        isDefault: false

env:
  HTTP_PROXY: http://10.158.0.85:80
  HTTPS_PROXY: http://10.158.0.85:80
  NO_PROXY: http://grafana

extraVolumes:
  - name: task-pv-claim-geomap-wms
    mountPath: /var/lib/grafana/plugins/felixrelleum-geomapwms-panel
    readOnly: true
    existingClaim: task-pv-claim-geomap-wms

extraVolumeMounts:
  - name: task-pv-claim-geomap-wms
    mountPath: /var/lib/grafana/plugins/felixrelleum-geomapwms-panel
    readOnly: true
    existingClaim: task-pv-claim-geomap-wms
    

extraInitContainers:
 - name: create-geomap-wms-panel-dir
   image: "docker.io/library/busybox:1.31.1"
   imagePullPolicy: IfNotPresent
   securityContext:
     capabilities:
       add:
        - CHOWN
     runAsNonRoot: false
     runAsUser: 0
     seccompProfile:
       type: RuntimeDefault
   command:
     - /bin/mkdir
     - -p
     - --mode=777
     - /var/lib/grafana/plugins/felixrelleum-geomapwms-panel
   volumeMounts:
     - name: storage
       mountPath: "/var/lib/grafana"