
name: Release

on:
  push:
    branches: [ "main" ]
    tags:
      - v[0-9]*.[0-9]*.[0-9]*

  jobs:
    lint:
      uses: ./.github/workflows/linting.yml

    test:
      uses: ./.github/workflows/test.yml

    build:
      needs: test
      steps:
      - run: npm install
      - run: npm run build

    e2e:
      needs: [test, build]
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run docker compose
        run: docker compose up -d
      - name: Check if Grafana is ready
        run: | 
          while [[ "$(curl --insecure -s -o /dev/null -w "%{response_code}" http://localhost:3000/api/health)" != "200" ]]; do 
              sleep 1
              echo "Grafana server not ready."
          done
          echo "Grafana server ready to accept connections."
      - name: Run Playwright tests
        id: run-tests
        run: npm run e2e
        env:
          CI: 'true' # https://playwright.dev/docs/ci
    
    validate:
      - name: Zip the dist folder
        run: zip -qr geomap-wms-panel.zip geomap-wms-panel
      - name: Run validator
        run: npx --yes @grafana/plugin-validator@latest -sourceCodeUri file://. geomap-wms-panel.zip # https://github.com/grafana/plugin-validator
    
    release:
      needs: [lint, test, build, e2e, validate]
      # Not applicable since uses dist folder as build output directory
      # https://github.com/grafana/plugin-actions/blob/main/build-plugin/action.yml
      # - uses: grafana/plugin-actions/build-plugin@release
      #   with:
      #     grafana_token: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}
      - name: Sign plugin
      run: npm run sign
      shell: bash
      env:
        GRAFANA_ACCESS_POLICY_TOKEN: ${{ inputs.policy_token }}
        GRAFANA_API_KEY: ${{ inputs.grafana_token }}
      if: ${{ inputs.policy_token != '' }}



    
